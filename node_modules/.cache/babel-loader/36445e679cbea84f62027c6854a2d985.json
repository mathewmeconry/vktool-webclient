{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _AutosizeInput = require('./AutosizeInput.react');\n\nvar _AutosizeInput2 = _interopRequireDefault(_AutosizeInput);\n\nvar _Token = require('./Token.react');\n\nvar _Token2 = _interopRequireDefault(_Token);\n\nvar _utils = require('./utils/');\n\nvar _hintContainer = require('./containers/hintContainer');\n\nvar _hintContainer2 = _interopRequireDefault(_hintContainer);\n\nvar _inputContainer = require('./containers/inputContainer');\n\nvar _inputContainer2 = _interopRequireDefault(_inputContainer);\n\nvar _keyCode = require('./constants/keyCode');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar HintedAutosizeInput = (0, _hintContainer2.default)(_AutosizeInput2.default);\n\nvar TypeaheadInputMulti = function (_React$Component) {\n  _inherits(TypeaheadInputMulti, _React$Component);\n\n  function TypeaheadInputMulti() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TypeaheadInputMulti);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TypeaheadInputMulti.__proto__ || Object.getPrototypeOf(TypeaheadInputMulti)).call.apply(_ref, [this].concat(args))), _this), _this._renderToken = function (option, idx) {\n      var _this$props = _this.props,\n          _onRemove = _this$props.onRemove,\n          renderToken = _this$props.renderToken;\n\n      var props = _extends({}, _this.props, {\n        onRemove: function onRemove() {\n          return _onRemove(option);\n        }\n      });\n\n      return renderToken(option, props, idx);\n    }, _this._handleContainerClickOrFocus = function (e) {\n      // Don't focus the input if it's disabled.\n      if (_this.props.disabled) {\n        e.target.blur();\n        return;\n      } // Move cursor to the end if the user clicks outside the actual input.\n\n\n      var inputNode = _this._input;\n\n      if (e.target !== inputNode) {\n        inputNode.selectionStart = inputNode.value.length;\n      }\n\n      inputNode.focus();\n    }, _this._handleKeyDown = function (e) {\n      var _this$props2 = _this.props,\n          onKeyDown = _this$props2.onKeyDown,\n          selected = _this$props2.selected,\n          value = _this$props2.value;\n\n      switch (e.keyCode) {\n        case _keyCode.BACKSPACE:\n          if (e.target === _this._input && selected.length && !value) {\n            // If the input is selected and there is no text, focus the last\n            // token when the user hits backspace.\n            var children = _this._wrapper.children;\n            var lastToken = children[children.length - 2];\n            lastToken && lastToken.focus();\n          }\n\n          break;\n      }\n\n      onKeyDown(e);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TypeaheadInputMulti, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          inputClassName = _props.inputClassName,\n          labelKey = _props.labelKey,\n          onRemove = _props.onRemove,\n          renderToken = _props.renderToken,\n          selected = _props.selected,\n          props = _objectWithoutProperties(_props, ['className', 'inputClassName', 'labelKey', 'onRemove', 'renderToken', 'selected']);\n\n      return (\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n\n        /* eslint-disable jsx-a11y/click-events-have-key-events */\n        _react2.default.createElement('div', {\n          className: (0, _classnames2.default)('form-control', 'rbt-input-multi', className),\n          disabled: props.disabled,\n          onClick: this._handleContainerClickOrFocus,\n          onFocus: this._handleContainerClickOrFocus,\n          tabIndex: -1\n        }, _react2.default.createElement('div', {\n          className: 'rbt-input-wrapper',\n          ref: function ref(el) {\n            return _this2._wrapper = el;\n          }\n        }, selected.map(this._renderToken), _react2.default.createElement(HintedAutosizeInput, _extends({}, props, {\n          inputClassName: (0, _classnames2.default)('rbt-input-main', inputClassName),\n          inputRef: function inputRef(input) {\n            _this2._input = input;\n\n            _this2.props.inputRef(input);\n          },\n          inputStyle: {\n            backgroundColor: 'transparent',\n            border: 0,\n            boxShadow: 'none',\n            cursor: 'inherit',\n            outline: 'none',\n            padding: 0\n          },\n          onKeyDown: this._handleKeyDown,\n          style: {\n            position: 'relative',\n            zIndex: 1\n          }\n        }))))\n        /* eslint-enable jsx-a11y/no-static-element-interactions */\n\n        /* eslint-enable jsx-a11y/click-events-have-key-events */\n\n      );\n    }\n    /**\n     * Forward click or focus events on the container element to the input.\n     */\n\n  }]);\n\n  return TypeaheadInputMulti;\n}(_react2.default.Component);\n\nTypeaheadInputMulti.propTypes = {\n  /**\n   * Provides a hook for customized rendering of tokens when multiple\n   * selections are enabled.\n   */\n  renderToken: _propTypes2.default.func\n};\nTypeaheadInputMulti.defaultProps = {\n  renderToken: function renderToken(option, props, idx) {\n    return _react2.default.createElement(_Token2.default, {\n      disabled: props.disabled,\n      key: idx,\n      onRemove: props.onRemove,\n      tabIndex: props.tabIndex\n    }, (0, _utils.getOptionLabel)(option, props.labelKey));\n  }\n};\nexports.default = (0, _inputContainer2.default)(TypeaheadInputMulti);","map":null,"metadata":{},"sourceType":"script"}