{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _ClearButton = require('./ClearButton.react');\n\nvar _ClearButton2 = _interopRequireDefault(_ClearButton);\n\nvar _Loader = require('./Loader.react');\n\nvar _Loader2 = _interopRequireDefault(_Loader);\n\nvar _Overlay = require('./Overlay.react');\n\nvar _Overlay2 = _interopRequireDefault(_Overlay);\n\nvar _TypeaheadInputMulti = require('./TypeaheadInputMulti.react');\n\nvar _TypeaheadInputMulti2 = _interopRequireDefault(_TypeaheadInputMulti);\n\nvar _TypeaheadInputSingle = require('./TypeaheadInputSingle.react');\n\nvar _TypeaheadInputSingle2 = _interopRequireDefault(_TypeaheadInputSingle);\n\nvar _TypeaheadMenu = require('./TypeaheadMenu.react');\n\nvar _TypeaheadMenu2 = _interopRequireDefault(_TypeaheadMenu);\n\nvar _typeaheadContainer = require('./containers/typeaheadContainer');\n\nvar _typeaheadContainer2 = _interopRequireDefault(_typeaheadContainer);\n\nvar _utils = require('./utils/');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Typeahead = function (_React$Component) {\n  _inherits(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Typeahead);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Typeahead.__proto__ || Object.getPrototypeOf(Typeahead)).call.apply(_ref, [this].concat(args))), _this), _this._renderInput = function (inputProps) {\n      var Input = inputProps.multiple ? _TypeaheadInputMulti2.default : _TypeaheadInputSingle2.default;\n      return _react2.default.createElement(Input, inputProps);\n    }, _this._renderAux = function () {\n      var _this$props = _this.props,\n          bsSize = _this$props.bsSize,\n          clearButton = _this$props.clearButton,\n          disabled = _this$props.disabled,\n          isLoading = _this$props.isLoading,\n          onClear = _this$props.onClear,\n          selected = _this$props.selected;\n      var content = void 0;\n\n      if (isLoading) {\n        content = _react2.default.createElement(_Loader2.default, {\n          bsSize: bsSize\n        });\n      } else if (clearButton && !disabled && selected.length) {\n        content = _react2.default.createElement(_ClearButton2.default, {\n          bsSize: bsSize,\n          onClick: onClear,\n          onFocus: function onFocus(e) {\n            // Prevent the main input from auto-focusing again.\n            e.stopPropagation();\n          },\n          onMouseDown: _utils.preventInputBlur\n        });\n      }\n\n      return content ? _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('rbt-aux', {\n          'rbt-aux-lg': bsSize === 'large' || bsSize === 'lg'\n        })\n      }, content) : null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Typeahead, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var allowNew = nextProps.allowNew,\n          onInitialItemChange = nextProps.onInitialItemChange,\n          results = nextProps.results; // Clear the initial item when there are no results.\n\n      if (!(allowNew || results.length)) {\n        onInitialItemChange(null);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          bodyContainer = _props.bodyContainer,\n          children = _props.children,\n          className = _props.className,\n          isMenuShown = _props.isMenuShown,\n          menuId = _props.menuId,\n          renderMenu = _props.renderMenu,\n          results = _props.results;\n      var inputProps = (0, _pick2.default)(this.props, ['activeIndex', 'activeItem', 'bsSize', 'disabled', 'initialItem', 'inputProps', 'inputRef', 'isInvalid', 'isMenuShown', 'isValid', 'labelKey', 'menuId', 'multiple', 'onAdd', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'onRemove', 'placeholder', 'renderToken', 'selected', 'selectHintOnEnter', 'text']);\n      var overlayProps = (0, _pick2.default)(this.props, ['align', 'className', 'dropup', 'flip', 'onMenuHide', 'onMenuShow']);\n      var menuProps = (0, _pick2.default)(this.props, ['emptyLabel', 'labelKey', 'maxHeight', 'newSelectionPrefix', 'renderMenuItemChildren', 'text']);\n\n      var auxContent = this._renderAux();\n\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('rbt', 'clearfix', 'open', {\n          'has-aux': !!auxContent\n        }, className),\n        style: {\n          position: 'relative'\n        },\n        tabIndex: -1\n      }, this._renderInput(_extends({}, inputProps, {\n        // Use `findDOMNode` here since it's easier and less fragile than\n        // forwarding refs down to the input's container.\n        // TODO: Consider using `forwardRef` when React 16.3 usage is higher.\n        ref: function ref(node) {\n          return _this2._inputContainer = (0, _reactDom.findDOMNode)(node);\n        }\n      })), typeof children === 'function' ? children(this.props) : children, auxContent, _react2.default.createElement(_Overlay2.default, _extends({}, overlayProps, {\n        container: bodyContainer ? document.body : this,\n        referenceElement: this._inputContainer,\n        show: isMenuShown\n      }), renderMenu(results, _extends({}, menuProps, {\n        id: menuId\n      }))), _react2.default.createElement('div', {\n        'aria-atomic': true,\n        'aria-live': 'polite',\n        className: 'sr-only rbt-sr-status',\n        role: 'status'\n      }, (0, _utils.getAccessibilityStatus)(this.props)));\n    }\n  }]);\n\n  return Typeahead;\n}(_react2.default.Component);\n\nTypeahead.propTypes = {\n  renderMenu: _propTypes2.default.func\n};\nTypeahead.defaultProps = {\n  renderMenu: function renderMenu(results, menuProps) {\n    return _react2.default.createElement(_TypeaheadMenu2.default, _extends({}, menuProps, {\n      options: results\n    }));\n  }\n};\nexports.default = (0, _typeaheadContainer2.default)(Typeahead);","map":null,"metadata":{},"sourceType":"script"}