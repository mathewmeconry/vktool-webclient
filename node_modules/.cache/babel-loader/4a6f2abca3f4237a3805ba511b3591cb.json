{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { DataList } from \"../components/DataList\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data.compensationEntries,\n    title: 'Entschädigungen',\n    viewLocation: '/compensations/',\n    tableColumns: [{\n      text: 'Mitglied',\n      keys: {\n        'member': ['firstname', 'lastname']\n      },\n      sortable: true\n    }, {\n      text: 'Datum',\n      keys: ['date'],\n      sortable: true\n    }, {\n      text: 'Betrag',\n      keys: ['amount'],\n      sortable: true,\n      prefix: 'CHF ',\n      suffix: '.-'\n    }, {\n      text: 'Ersteller',\n      keys: {\n        'creator': ['displayName']\n      },\n      sortable: true\n    }, {\n      text: 'Genehmigt',\n      keys: ['approved'],\n      sortable: true\n    }, {\n      text: 'Ausbezahlt',\n      keys: ['paied'],\n      sortable: true\n    }]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchData: function fetchData() {\n      dispatch(Data.fetchCompensationEntries());\n    },\n    onSearch: function onSearch(value) {\n      dispatch(UI.searchCompensationEntries(value));\n    },\n    onSort: function onSort(sortKeys, sortDirection) {\n      dispatch(UI.sortCompensationEntries(sortKeys, sortDirection));\n    }\n  };\n}; //@ts-ignore\n\n\nexport var Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList);","map":{"version":3,"sources":["/home/mathias/Documents/privat/VK/vk-tool/src/app/views/Compensations.tsx"],"names":["connect","Data","UI","DataList","mapStateToProps","state","data","compensationEntries","title","viewLocation","tableColumns","text","keys","sortable","prefix","suffix","mapDispatchToProps","dispatch","fetchData","fetchCompensationEntries","onSearch","value","searchCompensationEntries","onSort","sortKeys","sortDirection","sortCompensationEntries","Compensations"],"mappings":"AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AAGA,SAASC,QAAT,QAAyB,wBAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAkB;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC,mBADd;AAEHC,IAAAA,KAAK,EAAE,iBAFJ;AAGHC,IAAAA,YAAY,EAAE,iBAHX;AAIHC,IAAAA,YAAY,EAAE,CACV;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAE,kBAAU,CAAC,WAAD,EAAc,UAAd;AAAZ,OAA1B;AAAmEC,MAAAA,QAAQ,EAAE;AAA7E,KADU,EAEV;AAAEF,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,IAAI,EAAE,CAAC,MAAD,CAAvB;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAFU,EAGV;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE,CAAC,QAAD,CAAxB;AAAoCC,MAAAA,QAAQ,EAAE,IAA9C;AAAoDC,MAAAA,MAAM,EAAE,MAA5D;AAAoEC,MAAAA,MAAM,EAAE;AAA5E,KAHU,EAIV;AAAEJ,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAE;AAAE,mBAAW,CAAC,aAAD;AAAb,OAA3B;AAA2DC,MAAAA,QAAQ,EAAE;AAArE,KAJU,EAKV;AAAEF,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAE,CAAC,UAAD,CAA3B;AAAyCC,MAAAA,QAAQ,EAAE;AAAnD,KALU,EAMV;AAAEF,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,IAAI,EAAE,CAAC,OAAD,CAA5B;AAAuCC,MAAAA,QAAQ,EAAE;AAAjD,KANU;AAJX,GAAP;AAaH,CAdD;;AAgBA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAA0D;AACjF,SAAO;AACHC,IAAAA,SAAS,EAAE,qBAAM;AACbD,MAAAA,QAAQ,CAAChB,IAAI,CAACkB,wBAAL,EAAD,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAmB;AACzBJ,MAAAA,QAAQ,CAACf,EAAE,CAACoB,yBAAH,CAA6BD,KAA7B,CAAD,CAAR;AACH,KANE;AAOHE,IAAAA,MAAM,EAAE,gBAACC,QAAD,EAA0BC,aAA1B,EAA4D;AAChER,MAAAA,QAAQ,CAACf,EAAE,CAACwB,uBAAH,CAA2BF,QAA3B,EAAqCC,aAArC,CAAD,CAAR;AACH;AATE,GAAP;AAWH,CAZD,C,CAcA;;;AACA,OAAO,IAAME,aAAa,GAAG3B,OAAO,CAACI,eAAD,EAAkBY,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAtB","sourcesContent":["import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensations/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)"]},"metadata":{},"sourceType":"module"}