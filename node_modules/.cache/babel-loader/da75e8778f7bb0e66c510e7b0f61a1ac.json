{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ClearButton = require('./ClearButton.react');\n\nvar _ClearButton2 = _interopRequireDefault(_ClearButton);\n\nvar _tokenContainer = require('./containers/tokenContainer');\n\nvar _tokenContainer2 = _interopRequireDefault(_tokenContainer);\n\nvar _keyCode = require('./constants/keyCode');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Token\n *\n * Individual token component, generally displayed within the TokenizerInput\n * component, but can also be rendered on its own.\n */\n\n\nvar Token = function (_React$Component) {\n  _inherits(Token, _React$Component);\n\n  function Token() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Token);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Token.__proto__ || Object.getPrototypeOf(Token)).call.apply(_ref, [this].concat(args))), _this), _this._renderRemoveableToken = function () {\n      var _this$props = _this.props,\n          active = _this$props.active,\n          children = _this$props.children,\n          className = _this$props.className,\n          onRemove = _this$props.onRemove,\n          props = _objectWithoutProperties(_this$props, ['active', 'children', 'className', 'onRemove']);\n\n      return _react2.default.createElement('div', _extends({}, props, {\n        className: (0, _classnames2.default)('rbt-token', 'rbt-token-removeable', {\n          'rbt-token-active': active\n        }, className)\n      }), children, _react2.default.createElement(_ClearButton2.default, {\n        className: 'rbt-token-remove-button',\n        label: 'Remove',\n        onClick: onRemove,\n        onKeyDown: _this._handleRemoveButtonKeydown,\n        tabIndex: -1\n      }));\n    }, _this._renderToken = function () {\n      var _this$props2 = _this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          href = _this$props2.href;\n      var classnames = (0, _classnames2.default)('rbt-token', {\n        'rbt-token-disabled': disabled\n      }, className);\n\n      if (href) {\n        return _react2.default.createElement('a', {\n          className: classnames,\n          href: href\n        }, children);\n      }\n\n      return _react2.default.createElement('div', {\n        className: classnames\n      }, children);\n    }, _this._handleRemoveButtonKeydown = function (e) {\n      switch (e.keyCode) {\n        case _keyCode.RETURN:\n          _this.props.onRemove();\n\n          break;\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Token, [{\n    key: 'render',\n    value: function render() {\n      return this.props.onRemove && !this.props.disabled ? this._renderRemoveableToken() : this._renderToken();\n    }\n  }]);\n\n  return Token;\n}(_react2.default.Component);\n\nToken.propTypes = {\n  active: _propTypes2.default.bool,\n\n  /**\n   * Handler for removing/deleting the token. If not defined, the token will\n   * be rendered in a read-only state.\n   */\n  onRemove: _propTypes2.default.func,\n  tabIndex: _propTypes2.default.number\n};\nToken.defaultProps = {\n  active: false,\n  tabIndex: 0\n};\nexports.default = (0, _tokenContainer2.default)(Token);","map":null,"metadata":{},"sourceType":"script"}