{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { DataList } from \"../components/DataList\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data.members,\n    title: 'Mitglieder',\n    viewLocation: '/contact/',\n    tableColumns: [{\n      text: 'Name',\n      keys: ['firstname', 'lastname'],\n      sortable: true\n    }, {\n      text: 'Addresse',\n      keys: ['address', 'postcode', 'city'],\n      link: true,\n      linkPrefix: 'https://www.google.com/maps/place/',\n      sortable: true\n    }, {\n      text: 'Festnetz',\n      keys: ['phoneFixed'],\n      link: true,\n      linkPrefix: 'tel:',\n      sortable: true\n    }, {\n      text: 'Festnetz 2',\n      keys: ['phoneFixedSecond'],\n      link: true,\n      linkPrefix: 'tel:',\n      sortable: true\n    }, {\n      text: 'Mobile',\n      keys: ['phoneMobile'],\n      link: true,\n      linkPrefix: 'tel:',\n      sortable: true\n    }, {\n      text: 'E-Mail',\n      keys: ['mail'],\n      link: true,\n      linkPrefix: 'mailto:',\n      sortable: true\n    }, {\n      text: 'E-Mail 2',\n      keys: ['mailSecond'],\n      link: true,\n      linkPrefix: 'mailto:',\n      sortable: true\n    }]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchData: function fetchData() {\n      dispatch(Data.fetchMembers());\n    },\n    onSearch: function onSearch(value) {\n      dispatch(UI.searchMembers(value));\n    },\n    onSort: function onSort(sortKeys, sortDirection) {\n      dispatch(UI.sortMembers(sortKeys, sortDirection));\n    }\n  };\n};\n\nexport var Members = connect(mapStateToProps, mapDispatchToProps)(DataList);","map":{"version":3,"sources":["/home/mathias/Documents/privat/VK/vk-tool/src/app/views/Members.tsx"],"names":["connect","Data","UI","DataList","mapStateToProps","state","data","members","title","viewLocation","tableColumns","text","keys","sortable","link","linkPrefix","mapDispatchToProps","dispatch","fetchData","fetchMembers","onSearch","value","searchMembers","onSort","sortKeys","sortDirection","sortMembers","Members"],"mappings":"AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AAGA,SAASC,QAAT,QAAyB,wBAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAkB;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC,OADd;AAEHC,IAAAA,KAAK,EAAE,YAFJ;AAGHC,IAAAA,YAAY,EAAE,WAHX;AAIHC,IAAAA,YAAY,EAAE,CACV;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE,CAAC,WAAD,EAAc,UAAd,CAAtB;AAAiDC,MAAAA,QAAQ,EAAE;AAA3D,KADU,EAEV;AAAEF,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,MAAxB,CAA1B;AAA2DE,MAAAA,IAAI,EAAE,IAAjE;AAAuEC,MAAAA,UAAU,EAAE,oCAAnF;AAAyHF,MAAAA,QAAQ,EAAE;AAAnI,KAFU,EAGV;AAAEF,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE,CAAC,YAAD,CAA1B;AAA0CE,MAAAA,IAAI,EAAE,IAAhD;AAAsDC,MAAAA,UAAU,EAAE,MAAlE;AAA0EF,MAAAA,QAAQ,EAAE;AAApF,KAHU,EAIV;AAAEF,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,IAAI,EAAE,CAAC,kBAAD,CAA5B;AAAkDE,MAAAA,IAAI,EAAE,IAAxD;AAA8DC,MAAAA,UAAU,EAAE,MAA1E;AAAkFF,MAAAA,QAAQ,EAAE;AAA5F,KAJU,EAKV;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE,CAAC,aAAD,CAAxB;AAAyCE,MAAAA,IAAI,EAAE,IAA/C;AAAqDC,MAAAA,UAAU,EAAE,MAAjE;AAAyEF,MAAAA,QAAQ,EAAE;AAAnF,KALU,EAMV;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE,CAAC,MAAD,CAAxB;AAAkCE,MAAAA,IAAI,EAAE,IAAxC;AAA8CC,MAAAA,UAAU,EAAE,SAA1D;AAAqEF,MAAAA,QAAQ,EAAE;AAA/E,KANU,EAOV;AAAEF,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE,CAAC,YAAD,CAA1B;AAA0CE,MAAAA,IAAI,EAAE,IAAhD;AAAsDC,MAAAA,UAAU,EAAE,SAAlE;AAA6EF,MAAAA,QAAQ,EAAE;AAAvF,KAPU;AAJX,GAAP;AAcH,CAfD;;AAiBA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAA0D;AACjF,SAAO;AACHC,IAAAA,SAAS,EAAE,qBAAM;AACbD,MAAAA,QAAQ,CAAChB,IAAI,CAACkB,YAAL,EAAD,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAmB;AACzBJ,MAAAA,QAAQ,CAACf,EAAE,CAACoB,aAAH,CAAiBD,KAAjB,CAAD,CAAR;AACH,KANE;AAOHE,IAAAA,MAAM,EAAE,gBAACC,QAAD,EAA0BC,aAA1B,EAA4D;AAChER,MAAAA,QAAQ,CAACf,EAAE,CAACwB,WAAH,CAAeF,QAAf,EAAyBC,aAAzB,CAAD,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAeA,OAAO,IAAME,OAAO,GAAG3B,OAAO,CAACI,eAAD,EAAkBY,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAhB","sourcesContent":["import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)"]},"metadata":{},"sourceType":"module"}