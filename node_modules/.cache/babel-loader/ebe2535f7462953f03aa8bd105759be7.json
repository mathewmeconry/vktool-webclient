{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('../utils/');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction inputContainer(Input) {\n  var WrappedInput = function (_React$Component) {\n    _inherits(WrappedInput, _React$Component);\n\n    function WrappedInput() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, WrappedInput);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WrappedInput.__proto__ || Object.getPrototypeOf(WrappedInput)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        isFocused: false\n      }, _this._handleBlur = function (e) {\n        e.persist();\n\n        _this.setState({\n          isFocused: false\n        }, function () {\n          return _this.props.onBlur(e);\n        });\n      }, _this._handleFocus = function (e) {\n        e.persist();\n\n        _this.setState({\n          isFocused: true\n        }, function () {\n          return _this.props.onFocus(e);\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(WrappedInput, [{\n      key: 'getChildContext',\n      value: function getChildContext() {\n        var _props = this.props,\n            initialItem = _props.initialItem,\n            onAdd = _props.onAdd,\n            selectHintOnEnter = _props.selectHintOnEnter;\n        return {\n          hintText: (0, _utils.getHintText)(this.props),\n          initialItem: initialItem,\n          onAdd: onAdd,\n          selectHintOnEnter: selectHintOnEnter\n        };\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _cx;\n\n        var _props2 = this.props,\n            activeIndex = _props2.activeIndex,\n            bsSize = _props2.bsSize,\n            disabled = _props2.disabled,\n            inputRef = _props2.inputRef,\n            isInvalid = _props2.isInvalid,\n            isMenuShown = _props2.isMenuShown,\n            isValid = _props2.isValid,\n            labelKey = _props2.labelKey,\n            menuId = _props2.menuId,\n            multiple = _props2.multiple,\n            onChange = _props2.onChange,\n            onKeyDown = _props2.onKeyDown,\n            onRemove = _props2.onRemove,\n            placeholder = _props2.placeholder,\n            renderToken = _props2.renderToken,\n            selected = _props2.selected; // Add a11y-related props.\n\n        var inputProps = _extends({}, this.props.inputProps, {\n          'aria-activedescendant': activeIndex >= 0 ? (0, _utils.getMenuItemId)(activeIndex) : '',\n          'aria-autocomplete': multiple ? 'list' : 'both',\n          'aria-expanded': isMenuShown,\n          'aria-haspopup': 'listbox',\n          'aria-owns': menuId,\n          autoComplete: this.props.inputProps.autoComplete || 'nope',\n          disabled: disabled,\n          inputRef: inputRef,\n          onBlur: this._handleBlur,\n          onChange: onChange,\n          // Re-open the menu, eg: if it's closed via ESC.\n          onClick: this._handleFocus,\n          onFocus: this._handleFocus,\n          onKeyDown: onKeyDown,\n          placeholder: selected.length ? null : placeholder,\n          // Comboboxes are single-select by definition:\n          // https://www.w3.org/TR/wai-aria-practices-1.1/#combobox\n          role: 'combobox',\n          value: (0, _utils.getInputText)(this.props)\n        });\n\n        var className = inputProps.className || '';\n\n        if (multiple) {\n          inputProps = _extends({}, inputProps, {\n            inputClassName: className,\n            labelKey: labelKey,\n            onRemove: onRemove,\n            renderToken: renderToken,\n            role: '',\n            selected: selected\n          });\n        }\n\n        return _react2.default.createElement(Input, _extends({}, inputProps, {\n          className: (0, _classnames2.default)('rbt-input', (_cx = {}, _defineProperty(_cx, className, !multiple), _defineProperty(_cx, 'focus', this.state.isFocused), _defineProperty(_cx, 'input-lg form-control-lg', bsSize === 'large' || bsSize === 'lg'), _defineProperty(_cx, 'input-sm form-control-sm', bsSize === 'small' || bsSize === 'sm'), _defineProperty(_cx, 'is-invalid', isInvalid), _defineProperty(_cx, 'is-valid', isValid), _cx))\n        }));\n      }\n    }]);\n\n    return WrappedInput;\n  }(_react2.default.Component);\n\n  WrappedInput.displayName = 'InputContainer(' + (0, _utils.getDisplayName)(Input) + ')';\n  WrappedInput.childContextTypes = {\n    hintText: _propTypes2.default.string.isRequired,\n    initialItem: _propTypes2.default.oneOfType([_propTypes2.default.object.isRequired, _propTypes2.default.string.isRequired]),\n    onAdd: _propTypes2.default.func.isRequired,\n    selectHintOnEnter: _propTypes2.default.bool.isRequired\n  };\n  return WrappedInput;\n}\n\nexports.default = inputContainer;","map":null,"metadata":{},"sourceType":"script"}