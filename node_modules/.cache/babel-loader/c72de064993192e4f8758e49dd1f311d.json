{"ast":null,"code":"import _classCallCheck from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/mathias/Documents/privat/VK/vk-tool/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/mathias/Documents/privat/VK/vk-tool/src/app/views/BillingReport.tsx\";\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { Data } from '../actions/DataActions';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport var _BillingReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_BillingReport, _Component);\n\n  function _BillingReport(props) {\n    var _this;\n\n    _classCallCheck(this, _BillingReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_BillingReport).call(this, props));\n    _this.approve = _this.approve.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.billingReport = _this.props.billingReports.byId[_this.props.match.params.id];\n    return _this;\n  }\n\n  _createClass(_BillingReport, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.billingReport = nextProps.billingReports.byId[nextProps.match.params.id];\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchBillingReports();\n    }\n  }, {\n    key: \"approve\",\n    value: function approve() {\n      this.props.approve(this.billingReport._id);\n    }\n  }, {\n    key: \"elementView\",\n    value: function elementView(event) {\n      if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n        var _id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key'); // open a new tap when the middle button is pressed (buttonID 1)\n\n\n        if (event.button == 1) {\n          window.open(document.location.origin + '/compensation/' + _id);\n        } else {\n          this.props.history.push('/compensation/' + _id);\n        }\n      }\n    }\n  }, {\n    key: \"prepareCompensationsForTable\",\n    value: function prepareCompensationsForTable() {\n      var compensations = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.billingReport.compensations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var compensation = _step.value;\n          compensations[compensation._id] = compensation;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return compensations;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var actions = [React.createElement(\"button\", {\n        id: \"edit\",\n        className: \"btn btn-block btn-outline-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Editieren\")];\n\n      if (this.billingReport.status === 'pending') {\n        actions.push(React.createElement(\"button\", {\n          id: \"approve\",\n          className: \"btn btn-block btn-outline-success\",\n          onClick: this.approve,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Genehmigen\"));\n      }\n\n      return actions;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.loading || !this.billingReport) {\n        return React.createElement(Page, {\n          title: \"Verrechnungsrapport\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      }\n\n      var statusBadgeClass = 'badge-success';\n\n      if (this.billingReport.status === 'pending') {\n        statusBadgeClass = 'badge-warning';\n      }\n\n      return React.createElement(Page, {\n        title: \"Verrechnungsrapport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"Informationen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormEntry, {\n        id: \"orderTitle\",\n        title: \"Auftrag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.billingReport.order.title), React.createElement(FormEntry, {\n        id: \"date\",\n        title: \"Datum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.billingReport.orderDate.toLocaleDateString()), React.createElement(FormEntry, {\n        id: \"creator\",\n        title: \"Ersteller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.billingReport.creator.displayName), React.createElement(FormEntry, {\n        id: \"status\",\n        title: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"badge \" + statusBadgeClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.billingReport.status)), React.createElement(FormEntry, {\n        id: \"food\",\n        title: \"Verpflegung\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.billingReport.food ? '✓' : '⨯'), React.createElement(FormEntry, {\n        id: \"remarks\",\n        title: \"Bemerkungen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.billingReport.remarks))), React.createElement(Column, {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"Actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.renderActions()))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"VKs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: [{\n          text: 'Name',\n          keys: {\n            'member': ['firstname', 'lastname']\n          },\n          sortable: true\n        }, {\n          text: 'Von',\n          keys: ['from'],\n          format: 'toLocaleTimeString',\n          sortable: true\n        }, {\n          text: 'Bis',\n          keys: ['to'],\n          format: 'toLocaleTimeString',\n          sortable: true\n        }, {\n          text: 'Betrag',\n          keys: ['amount'],\n          prefix: 'CHF ',\n          suffix: '.-',\n          sortable: true\n        }, {\n          text: 'Ausbezahlt',\n          keys: ['paied'],\n          sortable: true\n        }, {\n          text: 'Actions',\n          keys: ['_id'],\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"btn btn-success view\",\n            onMouseUp: this.elementView,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(FontAwesomeIcon, {\n            icon: \"eye\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          })))\n        }],\n        data: this.prepareCompensationsForTable(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return _BillingReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    billingReports: state.data.billingReports,\n    loading: state.data.billingReports.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    fetchBillingReports: function fetchBillingReports() {\n      dispatch(Data.fetchBillingReports());\n    },\n    approve: function approve(id) {\n      dispatch(Data.approveBillingReport(id));\n    }\n  };\n}; //@ts-ignore\n\n\nexport var BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport);","map":{"version":3,"sources":["/home/mathias/Documents/privat/VK/vk-tool/src/app/views/BillingReport.tsx"],"names":["React","Component","Page","Panel","Row","Column","FormEntry","connect","Data","Loading","Table","FontAwesomeIcon","_BillingReport","props","approve","bind","billingReport","billingReports","byId","match","params","id","nextProps","fetchBillingReports","_id","event","currentTarget","parentNode","parentElement","getAttribute","button","window","open","document","location","origin","history","push","compensations","compensation","actions","status","loading","statusBadgeClass","order","title","orderDate","toLocaleDateString","creator","displayName","food","remarks","renderActions","text","keys","sortable","format","prefix","suffix","content","elementView","prepareCompensationsForTable","mapStateToProps","state","data","mapDispatchToProps","dispatch","approveBillingReport","BillingReport"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport BillingReportModel from '../../shared/models/BillingReportModel';\nimport Loading from '../components/Loading';\nimport OrderModel from '../../shared/models/OrderModel';\nimport UserModel from '../../shared/models/UserModel';\nimport Table from '../components/Table';\nimport CompensationEntryModel from '../../shared/models/CompensationEntryModel';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportModel>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportModel;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.billingReport = this.props.billingReports.byId[this.props.match.params.id]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[nextProps.match.params.id]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport._id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<CompensationEntryModel> = {}\n        for (let compensation of (this.billingReport.compensations as Array<CompensationEntryModel>)) {\n            compensations[compensation._id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.status === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.status === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as OrderModel).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.orderDate.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as UserModel).displayName}</FormEntry>\n                            <FormEntry id=\"status\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.status}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<CompensationEntryModel>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['to'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)"]},"metadata":{},"sourceType":"module"}