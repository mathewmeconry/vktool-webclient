{"version":3,"sources":["app/components/Column.tsx","app/components/Page.tsx","app/components/Panel.tsx","app/components/Row.tsx","app/views/AddBillingReport.tsx","app/components/WizardNav.tsx","app/views/AddBillingReportSteps/AddBillingReportStep1.tsx","app/views/AddBillingReportSteps/AddBillingReportStep2.tsx","app/views/AddBillingReportSteps/AddBillingReportStep3.tsx","app/views/AddBillingReportSteps/AddBillingReportStep4.tsx","app/components/Loading.tsx","app/components/DataList.tsx","app/components/Table.tsx","app/components/WizardStep.tsx","app/fontawesome_init.ts","app/reducers/UIReducer.ts","app/reducers/DataReducer.ts","app/reducers/IndexReducer.ts","shared/AuthRoles.ts","app/components/Header.tsx","app/components/NavibarElement.tsx","app/components/NavibarLevelHeader.tsx","app/components/Navibar.tsx","app/components/SecureRoute.tsx","app/views/Dashboard.tsx","app/views/Members.tsx","app/components/FormEntry.tsx","app/views/Contact.tsx","app/views/Orders.tsx","app/views/Order.tsx","app/views/BillingReports.tsx","app/views/Compensations.tsx","app/views/Login.tsx","app/views/Users.tsx","app/views/User.tsx","app/views/BillingReport.tsx","app/views/AddCompensation.tsx","app/Root.tsx","app/Store.ts","app/serviceWorker.js","app/index.tsx","app/actions/DataActions.ts","app/actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_Page","_Component","apply","arguments","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","open","title","Page","connect","state","ui","navibar_open","Panel","header","Row","_AddBillingReport","onNext","bind","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","data","i","setState","compensationEntries","vks","member","_id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","id","renderSteps","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","event","target","name","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","toLowerCase","text","preventDefault","selection","totalHours","getTime","checked","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","columns","content","AddBillingReportStep3","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","Loading","fullscreen","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","onMouseUp","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","direction","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","style","width","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","combineReducers","UIActions","NAVIBAR_TOGGLE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","toString","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react_default","displayName","react_fontawesome_index_es","Header","UI","toggleNavibar","NavibarElement","to","NavLink","exact","activeClassName","_NavibarLevelHeader","assertThisInitialized","open_level","onClose","onOpen","openClass","NavibarElement_NavibarElement","level","NavibarLevelHeader","openNavibarLevel","collapseNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","showError","goBack","Login","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","orderDate","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Root","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","post","_x2","_ref3","_callee3","_context3","_x3","_this4","_ref4","_callee4","_context4","_x4","route","fetchAction","gotAction","_ref5","_callee5","_context5","get","deepParser","console","log","_x5","test"],"mappings":"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","file":"static/js/main.0783c1b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\n\nexport class _Page extends Component<{ title: string, open: boolean }> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className={className + ' content'}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nexport const Page = connect(mapStateToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport OrderModel from '../../shared/models/OrderModel';\nimport ContactModel from '../../shared/models/ContactModel';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport UserModel from '../../shared/models/UserModel';\n\nexport interface AddBillingReportProps {\n    user: UserModel,\n    openOrders: DataInterface<OrderModel>,\n    members: DataInterface<ContactModel>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: OrderModel,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<string>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member._id\n        }\n\n        this.props.save({\n            orderId: this.state.order._id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user._id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as UserModel).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport OrderModel from \"../../../shared/models/OrderModel\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<OrderModel> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<OrderModel> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order._id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[this.state.order],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport ContactModel from \"../../../shared/models/ContactModel\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<ContactModel> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<ContactModel> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: string) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: string, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: string, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[i],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport OrderModel from \"../../../shared/models/OrderModel\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: OrderModel, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for(let id of this.props.data.ids) {\n            dataById[id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} style={{ width: '200px' }} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={id + content.join(' ')}><a key={id + [...content, 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={id + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={id} data-key={id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = true, action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport ContactModel from \"../../shared/models/ContactModel\";\nimport ContactGroupModel from \"../../shared/models/ContactGroupModel\";\nimport OrderModel from \"../../shared/models/OrderModel\";\nimport BillingReportModel from \"../../shared/models/BillingReportModel\";\nimport CompensationEntryModel from \"../../shared/models/CompensationEntryModel\";\nimport UserModel from \"../../shared/models/UserModel\";\n\nexport interface Data {\n    user: SingleDataInterface<UserModel>,\n    users: DataInterface<UserModel>\n    contacts: DataInterface<ContactModel>\n    members: DataInterface<ContactModel>\n    ranks: DataInterface<ContactGroupModel>\n    orders: DataInterface<OrderModel>,\n    openOrders: DataInterface<OrderModel>,\n    billingReports: DataInterface<BillingReportModel>,\n    compensationEntries: DataInterface<CompensationEntryModel>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<string>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction User(state: SingleDataInterface<UserModel> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<UserModel> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<UserModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<UserModel> {\n    let byId: StringIndexed<UserModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroupModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroupModel> {\n    let byId: StringIndexed<ContactGroupModel> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank._id] = rank\n                ids.push(rank._id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<ContactModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactModel> {\n    let byId: StringIndexed<ContactModel> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<ContactModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactModel> {\n    let byId: StringIndexed<ContactModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<OrderModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<OrderModel> {\n    let byId: StringIndexed<OrderModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order._id] = order\n                ids.push(order._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<OrderModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<OrderModel> {\n    let byId: StringIndexed<OrderModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order._id] = order\n                ids.push(order._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReportModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReportModel> {\n    let byId: StringIndexed<BillingReportModel> = {}\n    let ids: Array<string> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report._id] = report\n                ids.push(report._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<CompensationEntryModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<CompensationEntryModel> {\n    let byId: StringIndexed<CompensationEntryModel> = {}\n    let ids: Array<string> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry._id] = entry\n                ids.push(entry._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: User, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<string> {\n    let ids: Array<string> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact._id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(i)\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<string> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: string, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport UserModel from \"../../shared/models/UserModel\";\n\nexport class _Header extends Component<{ open: boolean, user: UserModel, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nexport default class NavibarElement extends Component<{ icon?: IconProp, to?: string, text: string, onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void }> {\n    public render() {\n        let icon;\n\n        if (this.props.icon) {\n            icon = <FontAwesomeIcon icon={this.props.icon} className=\"navibar-element-icon\" />;\n        }\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.props.onMouseUp}>\n                    <li>\n                        {icon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                    </li>\n                </NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.props.onMouseUp}>\n                    {icon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                </li>\n            )\n        }\n    }\n}","import NavibarElement from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    icon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: (id: string) => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose(this.props.id)\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n        }\n\n        return (\n            <div>\n                <NavibarElement icon={this.props.icon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>{this.props.children}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: (id: string) => {\n            dispatch(UI.collapseNavibarLevel(id))\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport NavibarElement from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport UserModel from \"../../shared/models/UserModel\";\nimport { AuthRoles } from \"../../shared/AuthRoles\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: UserModel }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" icon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" icon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" icon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" icon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" icon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" icon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" icon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" icon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" icon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" icon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport UserModel from '../../shared/models/UserModel';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../../shared/AuthRoles';\n\nexport interface SecureRouteProps {\n    user?: UserModel,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to=\"/login\" />) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport UserModel from \"../../shared/models/UserModel\";\nimport Loading from \"../components/Loading\";\nimport ContactModel from \"../../shared/models/ContactModel\";\n\nexport class _Dashboard extends Component<{ user: UserModel, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as ContactModel)._id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-4\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-8\">\n                        <Panel title=\"Test Wide\">\n                            This works!\n                </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport ContactGroupModel from \"../../shared/models/ContactGroupModel\";\nimport ContactModel from \"../../shared/models/ContactModel\";\nimport Loading from \"../components/Loading\";\n\nexport interface ContactProps {\n    contact: ContactModel,\n    ranks: DataInterface<ContactGroupModel>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroupModel>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroupModel>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroupModel) => el._id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroupModel) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', suffix: '.-' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport OrderModel from \"../../shared/models/OrderModel\";\nimport PositionModel from \"../../shared/models/PositionModel\";\nimport ContactModel from \"../../shared/models/ContactModel\";\n\nexport interface OrderProps {\n    order: OrderModel,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as PositionModel[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}.-</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}.-\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['orderDate'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['status'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensations/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport UserModel from \"../../shared/models/UserModel\";\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { Redirect } from \"react-router-dom\";\nimport { UI } from \"../actions/UIActions\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<UserModel>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n\n        if (this.props.location.search === '?error') {\n            this.props.showError();\n        }\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.history.goBack()\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href=\"https://vkazutool.azurewebsites.net/api/auth/outlook\"><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport UserModel from '../../shared/models/UserModel';\nimport ContactModel from '../../shared/models/ContactModel';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport interface UserProps {\n    user: UserModel,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as ContactModel\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact._id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport BillingReportModel from '../../shared/models/BillingReportModel';\nimport Loading from '../components/Loading';\nimport OrderModel from '../../shared/models/OrderModel';\nimport UserModel from '../../shared/models/UserModel';\nimport Table from '../components/Table';\nimport CompensationEntryModel from '../../shared/models/CompensationEntryModel';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportModel>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportModel;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.billingReport = this.props.billingReports.byId[this.props.match.params.id]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[nextProps.match.params.id]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport._id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<CompensationEntryModel> = {}\n        for (let compensation of (this.billingReport.compensations as Array<CompensationEntryModel>)) {\n            compensations[compensation._id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.status === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.status === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as OrderModel).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.orderDate.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as UserModel).displayName}</FormEntry>\n                            <FormEntry id=\"status\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.status}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<CompensationEntryModel>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['to'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport ContactModel from '../../shared/models/ContactModel';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<ContactModel>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<ContactModel>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"../shared/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Loading from \"./components/Loading\";\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put('https://vkazutool.azurewebsites.net/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.APPROVE_BILLING_REPORT,\n                    payload: id\n                })\n\n                axios.post('https://vkazutool.azurewebsites.net/api/billing-reports/approve', { '_id': id }, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Genehmigt!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.EDIT_BILLING_REPORT\n                })\n\n                axios.post('https://vkazutool.azurewebsites.net/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COMPENSATION_ENTRY\n                })\n\n                axios.put('https://vkazutool.azurewebsites.net/api/compensations', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCompensationEntries())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi('https://vkazutool.azurewebsites.net/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE,\n            payload: id\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}